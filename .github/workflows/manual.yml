name: work place
on:
  issues:
    types: labeled
jobs:
  build:
#    runs-on: ubuntu-20.04
    runs-on: ubuntu-latest
#    runs-on: ubuntu-18.04
#    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
      with:
       repository: ihsinme/OnionBase
       token: ${{ secrets.ACCESS_TOKEN }}
       ref: devTools
       path: devTools
    - name: "onion works"
      run: |
        sudo apt-get update 
        sudo apt-get install -y p7zip-full unzip iftop nmon
        sudo apt-get install -y tmate openssh-client python3-pip python3-setuptools python3-pandas
        sudo pip3 install pytelegrambotapi --upgrade
        echo 'net.ipv4.tcp_keepalive_time = 120'|sudo tee -a /etc/sysctl.conf 
        echo 'net.ipv4.tcp_keepalive_intvl = 30'|sudo tee -a /etc/sysctl.conf 
        echo 'net.ipv4.tcp_keepalive_probes = 8'|sudo tee -a /etc/sysctl.conf
        sudo sysctl -p
        sudo npm install --global http-server
        sudo mkdir /opt/docs/
        sudo mkdir /tmp/in
        sudo mkdir /tmp/out
        sudo mkdir /tmp/works
        sudo cp devTools/moduleIPYNB/get_sign.c /tmp/works
        sudo cp devTools/moduleIPYNB/in/RM.sh /opt/
        sudo cp devTools/moduleIPYNB/tele.py /opt/
        sudo cp devTools/moduleIPYNB/sshloc.sh /opt/
        sudo cp -r devTools/workModuleRun/insec/. /opt/ 2>&1 >/dev/null
        echo -e 'y\n'|sudo ssh-keygen -q -t rsa -N "" -f /root/.ssh/id_rsa
        sudo cp devTools/moduleIPYNB/in/tmux.sh /opt/
    - name: "startsimpl"
      if: contains(github.event.label.name, 'startsimpl')      
      run: |
        sudo ifconfig
        sudo mkdir /opt/1
    - name: "tmpNixKlee"
      if: contains(github.event.label.name, 'tmpNixKlee')      
      run: |
        curl -L https://nixos.org/nix/install | sh
        . /home/runner/.nix-profile/etc/profile.d/nix.sh
        nix-shell -p klee
        (cd devTools/moduleIPYNB/&& clang -I /nix/store/90p7hjhllf0s029jgfs2xwlpniigj7ji-klee-2.2/include -emit-llvm -c -g -O0 -Xclang -disable-O0-optnone get_sign.c)
        (cd devTools/moduleIPYNB/&&klee get_sign.bc)
    - name: "tmpDockerKlee"
      if: contains(github.event.label.name, 'tmpDockerKlee')      
      run: |
        sudo docker run -t -v /tmp/works/:/code klee/klee clang -I /home/klee/klee_src/include/klee/include -emit-llvm -c -g /code/get_sign.c -o /code/FILE.bc
        sudo ls -al /tmp/works
        sudo docker run -t -v /tmp/works/:/code klee/klee klee FILE.bc
    - name: "jupyter"
      if: contains(github.event.label.name, 'jupyter')      
      run: |
        sudo cp devTools/moduleIPYNB/in/conf.py /opt/
        (sudo apt-get install python3-dev python3-pip python3-venv python3-wheel -y&& sudo pip3 install wheel)
        (sudo pip3 install jupyter_contrib_nbextensions && sudo jupyter contrib nbextension install)
        (sudo pip3 install scikit-learn&&sudo pip3 install xgboost&&sudo pip3 install kaggle --upgrade)
        (sudo pip3 install statsmodels&& sudo pip3 install seaborn&&sudo pip3 install graphviz&&sudo pip3 install bayesian-optimization)
        (sudo pip3 install plotly&&sudo pip3 install cufflinks)
        (sudo apt-get install -y python3-pydot python3-pydot-ng graphviz)
        sudo jupyter-notebook --config=/opt/conf.py &
    - name: "mLGTM"
      if: contains(github.event.label.name, 'mLGTM')      
      run: |
        (cd /opt/&&sudo mkdir codeqlmy&&cd codeqlmy&&sudo git clone https://github.com/github/codeql.git codeql-repo) 
        (cd /opt/codeqlmy&&sudo wget https://github.com/github/codeql-cli-binaries/releases/download/v2.5.9/codeql-linux64.zip&&sudo unzip codeql-linux64.zip&&sudo rm codeql-linux64.zip)
        sudo cp devTools/moduleIPYNB/in/RM_mLGTM.sh /opt/RM.sh
    - name: "works"
      run:  sudo python3 devTools/moduleIPYNB/in/telebot/sl.py ${{github.event.label.name}}
    - name: "commit results works"
      run: |
        cd devTools
        sudo git config --local user.email "${GITHUB_ACTOR}@gmail.com"
        sudo git config --local user.name "${GITHUB_ACTOR}"
        sudo git remote -v
        sudo git add moduleIPYNB/\*.*
        sudo git commit -m "result ipynb works"
        sudo git push "https://ihsinme:${{ secrets.ACCESS_TOKEN }}@github.com/ihsinme/OnionBase.git" HEAD:devTools --force 
