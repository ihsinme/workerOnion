name: onion work
on:
  issues:
    types: labeled
jobs:
 StartWorks:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.list_dirs.outputs.matrix}}
    steps:
      - uses: actions/checkout@v2
      - id: list_dirs
        run: echo "::set-output name=matrix::$(ls|jq -cnR '[inputs | select(length>0)]')"
 StartWorks1:
    runs-on: ubuntu-latest
    needs: StartWorks
    steps:
    - id: step1
      run: ${{fromJson(needs.StartWorks.outputs.matrix)}}
    - id: step2 
      run: echo "::set-output name=matrix::$(ls|jq -cnR '[inputs | select(length>0)]')"
 ManyWorks:
    runs-on: ubuntu-latest
    needs: StartWorks
    strategy:
      matrix:
        job: ${{fromJson(needs.StartWorks.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v1
      - name: start $JOB
        run: |
          echo $JOB
        env:
          NUM_JOBS: 5
          JOB: ${{ matrix.job }}
 EndWorks:
    runs-on: ubuntu-latest
    if: always()
    needs: ManyWorks
    steps:
      - name: check
        run: |
          echo "endWorks this push"
          pwd
          ls
      - name: start time
        run: |
          date
